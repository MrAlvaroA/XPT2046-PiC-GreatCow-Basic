#chip 18F46K42, 64
#option explicit
#include <glcd.h>

'Generated by PIC PPS Tool for Great Cow Basic
'PPS Tool version: 0.0.6.2
'PinManager data: Not available (3)
'Generated for 18f46k42
'
'Template comment at the start of the config file
'
#startup InitPPS, 85
#define PPSToolPart 18f46k42

Sub InitPPS
  'Module: EXT_INT
  'INT0PPS = 0x0000       'RA0 > INT0
  'Module: SPI1
  SPI1SDIPPS = 0x0009    'RB1 > SDI1
  RB4PPS = 0x001F        'SDO1 > RB4
  RB3PPS = 0x001E        'SCK1 > RB3
  SPI1SCKPPS = 0x000B    'RB3 > SCK1 (bi-directional)
End Sub

'Defines for ILI9341
#Define GLCD_TYPE GLCD_TYPE_ILI9341

'Pin mappings for ILI9341
#Define GLCD_CS    PortA.0
#Define GLCD_RESET PortB.0
#Define GLCD_DC    PortB.5
#Define GLCD_DO    PortB.4
#Define GLCD_SCK   PortB.3
#Define GLCD_LED   PortB.2
#Define GLCD_DI    PortB.1

'Remaining GLCD Defines
#Define GLCD_EXTENDEDFONTSET1

'Define SPI Hardware Mode
#Define ILI9341_HardwareSPI

'Define for TouchScreen (Non SPI)
#Define TS_DO   PortD.7
#Define TS_IRQ  PortD.6
#Define TS_DI   PortD.5
#Define TS_CS   PortD.4
#Define TS_SCK  PortC.7

'Regular Ports
Dir GLCD_LED Out

'Variables
Dim XPT2046_Data as Byte
Dim XPT2046_DOUT as Byte
Dim XPT2046_DIN as Byte
Dim LAST4 as Byte
Dim XPos as Word
Dim YPos as Word

'Begining of Code
TouchScreen_Init
GLCDfntDefaultSize = 1
GLCDRotate ( Portrait )
GLCD_LED = 1

GLCDCLS ILI9341_BLACK
GLCDForeground = ILI9341_GREEN
GLCDfntDefaultSize = 2

GLCDPrint (0, 0, "X:")
GLCDPrint (0, 20, "Y:")


Do Forever
  If TS_IRQ = 0 Then GetXY
Loop

Sub TouchScreen_Init
  #Define XPT2046_DO TS_DO
  #Define XPT2046_IRQ TS_IRQ
  #Define XPT2046_DI TS_DI
  #Define XPT2046_CS TS_CS
  #Define XPT2046_SCK TS_SCK

  'TS Ports (Non SPI)
  Dir XPT2046_DO In
  Dir XPT2046_IRQ In
  Dir XPT2046_DI Out
  Dir XPT2046_CS Out
  Dir XPT2046_SCK Out

  'TS Data 8 bits
  'Bit 7 always 1 when sending data.
  'Bits 6 to 4 dictates what value we requesting.
  'Bit 3 dictates TS output 0 = 12bit, 1 = 8bit.
  'Bit 2 SER/DIF (No Clue).
  'Bit 1 PD1 Must be 0 to increase compatibility.
  'Bit 0 PD0 Must be 0 for power down after conversion.

  XPT2046_Data = 0b10000000 'Data to be sent.

  XPT2046_CS = 0 'Set TS to receive data.

  For XPT2046_DOUT = 0 to 7
    '125KHz Speed Give or Take)
    XPT2046_SCK = 1 'High clock
    Wait 4 us '4 us wait half cycle = 125KHz +/-
    XPT2046_SCK = 0 'Low clock (send data during lower part of the clock)
    IF XPT2046_Data.7 = 1 Then
      XPT2046_DI = 1
    Else
      XPT2046_DI = 0
    End If

    Rotate XPT2046_Data left
    Wait 4 us '4 us wait half cycle = 125KHz +/-
  Next

  For XPT2046_DIN = 0 to 15 'Receive 16 bits to complete cycle
    XPT2046_SCK = 1
    Wait 4 us
    XPT2046_SCK = 0
    Wait 4 us
  Next

  XPT2046_CS = 1

End Sub

Sub GetXY

  'TS Data 8 bits
  'Bit 7 always 1 when sending data.
  'Bits 6 to 4 dictates what value we requesting
  'Bit 3 dictates TS output 0 = 12bit, 1 = 8bit
  'Bit 2 SER/DIF (No Clue)
  'Bit 1 PD1 Must be 0 to increase compatibility
  'Bit 0 PD0 Must be 0 for power down after conversion.

  XPT2046_Data = 0b11010000 'Request X Position

  XPT2046_CS = 0 'Set TS to receive data.

  For XPT2046_DOUT = 0 to 7
    XPT2046_SCK = 1 'High clock
    Wait 4 us '4 us wait half cycle = 125KHz +/-
    XPT2046_SCK = 0 'Low clock (send data during lower part of the clock)
    IF XPT2046_Data.7 = 1 Then
      XPT2046_DI = 1
    Else
      XPT2046_DI = 0
    End If

    Rotate XPT2046_Data left
    Wait 4 us '4 us wait half cycle = 125KHz +/-
  Next

  XPos = 0

  For XPT2046_DIN = 0 to 11 'Receive 12 bits out of 16
    XPT2046_SCK = 1
    Wait 4 us
    XPT2046_SCK = 0

    IF XPT2046_DO = 1 Then
      XPos = XPos + 1
    End if

    Rotate XPos Left

    Wait 4 us
  Next

  For Last4 = 0 to 3 'Last4 bits (zero filled)
    XPT2046_SCK = 1
    Wait 4 us
    XPT2046_SCK = 0
    Wait 4 us
  Next

  XPT2046_Data = 0b10010000 'Request Y Position

  For XPT2046_DOUT = 0 to 7
    XPT2046_SCK = 1 'High clock
    Wait 4 us '4 us wait half cycle = 125KHz +/-
    XPT2046_SCK = 0 'Low clock (send data during lower part of the clock)
    IF XPT2046_Data.7 = 1 Then
      XPT2046_DI = 1
    Else
      XPT2046_DI = 0
    End If

    Rotate XPT2046_Data left
    Wait 4 us '4 us wait half cycle = 125KHz +/-
  Next

  YPos = 0

  For XPT2046_DIN = 0 to 11 'Receive 12 bits out of 16
    XPT2046_SCK = 1
    Wait 4 us
    XPT2046_SCK = 0

    IF XPT2046_DO = 1 Then
      YPos = YPos + 1
    End if

    Rotate YPos Left
    Wait 4 us
  Next

  For Last4 = 0 to 3 'Last4 bits (zero filled)
    XPT2046_SCK = 1
    Wait 4 us
    XPT2046_SCK = 0
    Wait 4 us
  Next

  XPT2046_CS = 1

  GLCDPrint(30, 0, XPos)
  GLCDPrint(30, 20, YPos)

End Sub





End

'Available colors
'ILI9341_BLACK
'ILI9341_RED
'ILI9341_GREEN
'ILI9341_BLUE
'ILI9341_WHITE
'ILI9341_PURPLE
'ILI9341_YELLOW
'ILI9341_CYAN
'ILI9341_D_GRAY
'ILI9341_L_GRAY
'ILI9341_SILVER
'ILI9341_MAROON
'ILI9341_OLIVE
'ILI9341_LIME
'ILI9341_AQUA
'ILI9341_TEAL
'ILI9341_NAVY
'ILI9341_FUCHSIA
